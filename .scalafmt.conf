# These can be used to delimit zone to do not format:
# // format: off
# // format: on
# manually exclude/include files to format:
# project.excludeFilters = [regex1, regex2]
# project.includeFilters = [regex1, regex2]

version = 3.8.1
runner.dialect = scala3
maxColumn = 100
assumeStandardLibraryStripMargin = true
importSelectors = binPack
encoding = "UTF-8"

indent {
  main = 2
  significant = 2
  callSite = 2
  ctrlSite = 2
  defnSite = 2
  ctorSite = 2
  matchSite = 2
  caseSite = 2
  extendSite = 2
  withSiteRelativeToExtends = 3
  commaSiteRelativeToExtends = 2
  extraBeforeOpenParenDefnSite = 0
  relativeToLhsLastLine = [match, infix]
}

align {
  preset = more
  arrowEnumeratorGenerator = false
  closeParenSite = false
  openParenCallSite = false
  openParenDefnSite = false
  openParenTupleSite = true
  stripMargin = true
  multiline = true
  allowOverflow = true
  inInterpolation = false
  delayUntilSpace = true
}

newlines {
  source = keep
  topLevelStatementBlankLines = [ { blanks { before = 1 , beforeEndMarker = 1} } ]
  topLevelBodyIfMinStatements = []
  beforeTemplateBodyIfBreakInParentCtors = false
  beforeMultiline = fold
  forceBeforeMultilineAssign = never
  forceBeforeAssign = never
  beforeTypeBounds = keep
  alwaysBeforeElseAfterCurlyIf = false
  beforeCurlyLambdaParams = never
  afterCurlyLambdaParams = squash
  implicitParamListModifierPrefer = after
  afterInfix = keep
  avoidForSimpleOverflow=[tooLong, punct, slc]
  avoidInResultType = true
  sometimesBeforeColonInMethodReturnType = true
  selectChains = keep
  inInterpolation = avoid
}

danglingParentheses {
  defnSite = true
  callSite = true
  ctrlSite = true
  tupleSite = true
}

optIn {
  configStyleArguments = true
  forceBlankLineBeforeDocstring = true
}

rewrite.rules = [
  AvoidInfix
  RedundantBraces
  RedundantParens
  SortModifiers
  PreferCurlyFors
  Imports
]

rewrite {

  redundantBraces {
    generalExpressions = false
    ifElseExpressions = false
    defnBodies = all
    includeUnitMethods = true
    stringInterpolation = true
    parensForOneLineApply = true
    maxBreaks = 30
  }

  imports {
    expand = false
    sort = original
  }

  trailingCommas {
    style = multiple
    allowFolding = true
  }

  scala3 {
    convertToNewSyntax = true
    insertEndMarkerMinLines = 15
    removeEndMarkerMaxLines = 14
  }
}

verticalMultiline {
  atDefnSite = false
  arityThreshold = 10
  newlineAfterOpenParen = true
}

comments {
  wrap = no
  wrapStandaloneSlcAsSlc = true
}

docstrings {
  style = AsteriskSpace
  removeEmpty = true
  oneline = fold
  wrap = no
  blankFirstLine = no
  forceBlankLineBefore = true
}

spaces {
  beforeContextBoundColon = Never
  inImportCurlyBraces = false
  inInterpolatedStringCurlyBraces = false
  inParentheses = false
  afterKeywordBeforeParen = true
  inByNameTypes = true
  afterSymbolicDefs = true 
  beforeApplyArgInParens = AfterSymbolic
  beforeInfixArgInParens = AfterSymbolic
}

literals {
  long = Upper
  float = Lower
  double = Lower
  hexPrefix = Lower
  hexDigits = Upper
  scientific = Lower
}

rewriteTokens = {
  "⇒": "=>"
  "→": "->"
  "←": "<-"
}

runner {
    maxStateVisits = 1000000
    optimizer {
        maxVisitsPerToken = 10000
        forceConfigStyleMinSpan = 50
        forceConfigStyleMinArgCount = 2
    }
}
